name: CD

on:
  push:
    branches: [ "develop" ]

jobs:
  deploy-ci:
    runs-on: ubuntu-22.04

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: docker build 가능하도록 환경 설정
        uses: docker/setup-buildx-action@v2.9.1

      - name: docker hub에로그인
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        env:
          SECRET_MANAGER_TOKEN: ${{ secrets.SECRET_MANAGER_TOKEN }}
          SECRET_MANAGER_WORKSPACE: ${{ secrets.SECRET_MANAGER_WORKSPACE_ID }}
        run: |
          docker build --platform linux/amd64 -t histour/histour -f Dockerfile-prod \
            --build-arg SECRET_MANAGER_TOKEN=${SECRET_MANAGER_TOKEN} \
            --build-arg SECRET_MANAGER_WORKSPACE=${SECRET_MANAGER_WORKSPACE} .
          docker push histour/histour

  deploy-cd:
    needs: deploy-ci
    runs-on: ubuntu-20.04

    steps:
      - name: 도커 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_SERVER_IP }}
          username: ${{ secrets.RELEASE_SERVER_USER }}
          key: ${{ secrets.RELEASE_SERVER_KEY }}
          script: |
            ./deploy.sh
