plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'checkstyle'
}

checkstyle {
    maxWarnings = 0
    configFile = file("checkstyle/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "checkstyle/naver-checkstyle-suppressions.xml"]
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = true
        html.required = true
    }
}

allprojects {
    group = 'trible.histour'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'checkstyle'

    checkstyle {
        maxWarnings = 0
        configFile = rootProject.file("checkstyle/naver-checkstyle-rules.xml")
        configProperties = ["suppressionFile": rootProject.file("checkstyle/naver-checkstyle-suppressions.xml")]
    }

    tasks.withType(Checkstyle).configureEach {
        reports {
            xml.required.set(true)
            html.required.set(true)
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-autoconfigure'
        implementation 'org.springframework.boot:spring-boot-starter-logging'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'trible.histour.bootstrap.HistourBootstrapApplication'
        )
    }
}

bootJar {
    enabled = false
}
